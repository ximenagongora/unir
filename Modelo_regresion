{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "EIdT9iu_Z4Rb"
   },
   "source": [
    "# Regresion Basica: Predecir eficiencia un vuelo aéreo"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "AHp3M9ZmrIxj"
   },
   "source": [
    "Para esta actividad de Regresión se busca un dataset en la página https://www.openml.org/d/1169 que trata de una Aerolinea de los estados de Estados Unidos. \n",
    "\n",
    "El desarrollo de esta actividad, voy a implementar dos algoritmos de regresión uno basado en redes neuronales y basado en regresión simple. Al finalizar, tendremos los dos modelos a comparar y se indicará cual se ajusta mejor al análisis.\n",
    "\n",
    "En un problema de *regresion*, buscamos predecir la salida de un valor continuo como la probabilidad de un precio.\n",
    "\n",
    "Para el desarrollo de este ejercicio, se ha tomando un dataset de vuelvos durante el mes de enero del 2021 entre los estados de Los Estados Unidos de Norte America, y se construye un modelo para predecir la eficiencia de los vuelos en cuanto a si hay o no retrasos. \n",
    "Para realizar lo anteriormente mencionado, se incluye atributos como: llenada tarde, día de la semana, aeropuerto de origen, aeropuerto de destino, aterrizaje con retrazo, y tiempo de vuelo "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-09-23T00:13:20.617330Z",
     "iopub.status.busy": "2020-09-23T00:13:20.616344Z",
     "iopub.status.idle": "2020-09-23T00:13:27.321654Z",
     "shell.execute_reply": "2020-09-23T00:13:27.321020Z"
    },
    "id": "1rRo8oNqZ-Rj"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2.3.1\n"
     ]
    }
   ],
   "source": [
    "#Librerias que se emplean para el desarrollo de los modelos\n",
    "\n",
    "#Preparar y analizar los datos\n",
    "import numpy as np\n",
    "#Pandas porque me permite manipular y analizar los datos\n",
    "import pandas as pd\n",
    "#Permite crear gráficas\n",
    "import matplotlib.pyplot as plt\n",
    "#Seaborn para que me permita lavisualización de datos, es basada en matplotlib\n",
    "import seaborn as sns \n",
    "\n",
    "\n",
    "#Librerias empleadas para redes Neuronales\n",
    "#Tensorflow facilita la creación modelos de aprendizaje automático\n",
    "import tensorflow as tf\n",
    "#Keras es una API que ayuda a crear las redes neuronales \n",
    "from tensorflow import keras\n",
    "#Layers permite generar las capas que se empleará para la red neuronal\n",
    "from tensorflow.keras import layers\n",
    "\n",
    "\n",
    "#Librerias empleadas para Random Forest\n",
    "from sklearn.ensemble import RandomForestRegressor\n",
    "from sklearn.model_selection import ParameterGrid\n",
    "from sklearn.metrics import mean_absolute_error\n",
    "\n",
    "print(tf.__version__)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "F_72b0LCNbjx"
   },
   "source": [
    "## El set de Datos del retraso de vuelo"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "gFh9ne3FZ-On"
   },
   "source": [
    "### Obtenga la data\n",
    "Primero que se debe hacer es obtener el set de datos, la solicitud es que se deba de leer por si solo, entonces he creado un repositorio en Github que me permita tener almacenada allí la información"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-09-23T00:13:27.328243Z",
     "iopub.status.busy": "2020-09-23T00:13:27.327585Z",
     "iopub.status.idle": "2020-09-23T00:13:27.661960Z",
     "shell.execute_reply": "2020-09-23T00:13:27.662382Z"
    },
    "id": "p9kxxgzvzlyz"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'/Users/ximenagongora/.keras/datasets/data_air'"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Se llama ese archivo mediante el uso de keras desde la dirección del repositorio, lo que hace Keras es crear un \n",
    "#guardado automático en tu equipo para estar trabajando\n",
    "dataset_path = keras.utils.get_file(\"data_air\", \"https://raw.githubusercontent.com/ximenagongora/unir/master/REPORTING.csv\")\n",
    "dataset_path\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "nslsRLh7Zss4"
   },
   "source": [
    "Seleccionamos las columnas a analizar. La hipótesis que voy a resolver, es predecir cual es el vuelo con más retrasos de acuerdo a su tiempo de llegada al sitio de destino."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-09-23T00:13:27.670510Z",
     "iopub.status.busy": "2020-09-23T00:13:27.667688Z",
     "iopub.status.idle": "2020-09-23T00:13:27.689919Z",
     "shell.execute_reply": "2020-09-23T00:13:27.689290Z"
    },
    "id": "CiX2FI4gZtTt"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ARR_DELAY</th>\n",
       "      <th>DAY_OF_WEEK</th>\n",
       "      <th>ORIGIN_AIRPORT_SEQ_ID</th>\n",
       "      <th>DEST_AIRPORT_SEQ_ID</th>\n",
       "      <th>DEP_DELAY_NEW</th>\n",
       "      <th>AIR_TIME</th>\n",
       "      <th>DISTANCE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>68.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1389101</td>\n",
       "      <td>1477104</td>\n",
       "      <td>41.0</td>\n",
       "      <td>74.0</td>\n",
       "      <td>363</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1389101</td>\n",
       "      <td>1477104</td>\n",
       "      <td>0.0</td>\n",
       "      <td>71.0</td>\n",
       "      <td>363</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1389101</td>\n",
       "      <td>1483106</td>\n",
       "      <td>0.0</td>\n",
       "      <td>57.0</td>\n",
       "      <td>333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>10.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1389101</td>\n",
       "      <td>1483106</td>\n",
       "      <td>10.0</td>\n",
       "      <td>63.0</td>\n",
       "      <td>333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1389101</td>\n",
       "      <td>1483106</td>\n",
       "      <td>1.0</td>\n",
       "      <td>57.0</td>\n",
       "      <td>333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1594</th>\n",
       "      <td>43.0</td>\n",
       "      <td>4</td>\n",
       "      <td>1410005</td>\n",
       "      <td>1320402</td>\n",
       "      <td>47.0</td>\n",
       "      <td>131.0</td>\n",
       "      <td>861</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1595</th>\n",
       "      <td>0.0</td>\n",
       "      <td>4</td>\n",
       "      <td>1410005</td>\n",
       "      <td>1320402</td>\n",
       "      <td>0.0</td>\n",
       "      <td>127.0</td>\n",
       "      <td>861</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1596</th>\n",
       "      <td>0.0</td>\n",
       "      <td>4</td>\n",
       "      <td>1410005</td>\n",
       "      <td>1323202</td>\n",
       "      <td>0.0</td>\n",
       "      <td>101.0</td>\n",
       "      <td>668</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1597</th>\n",
       "      <td>0.0</td>\n",
       "      <td>4</td>\n",
       "      <td>1410005</td>\n",
       "      <td>1323202</td>\n",
       "      <td>4.0</td>\n",
       "      <td>101.0</td>\n",
       "      <td>668</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1598</th>\n",
       "      <td>0.0</td>\n",
       "      <td>4</td>\n",
       "      <td>1410005</td>\n",
       "      <td>1323202</td>\n",
       "      <td>0.0</td>\n",
       "      <td>102.0</td>\n",
       "      <td>668</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1599 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      ARR_DELAY  DAY_OF_WEEK  ORIGIN_AIRPORT_SEQ_ID  DEST_AIRPORT_SEQ_ID  \\\n",
       "0          68.0            3                1389101              1477104   \n",
       "1           0.0            3                1389101              1477104   \n",
       "2           0.0            3                1389101              1483106   \n",
       "3          10.0            3                1389101              1483106   \n",
       "4           0.0            3                1389101              1483106   \n",
       "...         ...          ...                    ...                  ...   \n",
       "1594       43.0            4                1410005              1320402   \n",
       "1595        0.0            4                1410005              1320402   \n",
       "1596        0.0            4                1410005              1323202   \n",
       "1597        0.0            4                1410005              1323202   \n",
       "1598        0.0            4                1410005              1323202   \n",
       "\n",
       "      DEP_DELAY_NEW  AIR_TIME  DISTANCE  \n",
       "0              41.0      74.0       363  \n",
       "1               0.0      71.0       363  \n",
       "2               0.0      57.0       333  \n",
       "3              10.0      63.0       333  \n",
       "4               1.0      57.0       333  \n",
       "...             ...       ...       ...  \n",
       "1594           47.0     131.0       861  \n",
       "1595            0.0     127.0       861  \n",
       "1596            0.0     101.0       668  \n",
       "1597            4.0     101.0       668  \n",
       "1598            0.0     102.0       668  \n",
       "\n",
       "[1599 rows x 7 columns]"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "column_names = ['ARR_DELAY_NEW','DAY_OF_WEEK','ORIGIN_AIRPORT_SEQ_ID', 'DEST_AIRPORT_SEQ_ID', 'DEP_DELAY_NEW', 'AIR_TIME', 'DISTANCE']\n",
    "# 'ORIGIN_CITY_NAME',\n",
    "raw_dataset = pd.read_csv(dataset_path, delimiter=\";\") \n",
    "\n",
    "dataset = raw_dataset.copy()\n",
    "dataset = dataset[column_names]\n",
    "dataset.columns = [\"ARR_DELAY\",'DAY_OF_WEEK','ORIGIN_AIRPORT_SEQ_ID', 'DEST_AIRPORT_SEQ_ID', 'DEP_DELAY_NEW', 'AIR_TIME', 'DISTANCE']\n",
    "\n",
    "#El dataaset está compuesto por 15.999 registros con 7 columnas\n",
    "dataset\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/ximenagongora/opt/anaconda3/lib/python3.8/site-packages/numpy/lib/histograms.py:839: RuntimeWarning: invalid value encountered in greater_equal\n",
      "  keep = (tmp_a >= first_edge)\n",
      "/Users/ximenagongora/opt/anaconda3/lib/python3.8/site-packages/numpy/lib/histograms.py:840: RuntimeWarning: invalid value encountered in less_equal\n",
      "  keep &= (tmp_a <= last_edge)\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Se obtiene un histograma para ver en valores absolutos los tiempos de retraso de los vuelos\n",
    "plt.hist(dataset['ARR_DELAY'],bins = 20)\n",
    "plt.xlabel(\"ARR_DELAY\")\n",
    "_=plt.ylabel(\"count\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2.0\n",
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 1283 entries, 1 to 1598\n",
      "Data columns (total 7 columns):\n",
      " #   Column                 Non-Null Count  Dtype  \n",
      "---  ------                 --------------  -----  \n",
      " 0   ARR_DELAY              1276 non-null   float64\n",
      " 1   DAY_OF_WEEK            1283 non-null   int64  \n",
      " 2   ORIGIN_AIRPORT_SEQ_ID  1283 non-null   int64  \n",
      " 3   DEST_AIRPORT_SEQ_ID    1283 non-null   int64  \n",
      " 4   DEP_DELAY_NEW          1277 non-null   float64\n",
      " 5   AIR_TIME               1276 non-null   float64\n",
      " 6   DISTANCE               1283 non-null   int64  \n",
      "dtypes: float64(3), int64(4)\n",
      "memory usage: 80.2 KB\n",
      "None\n",
      "        ARR_DELAY  DAY_OF_WEEK  ORIGIN_AIRPORT_SEQ_ID  DEST_AIRPORT_SEQ_ID  \\\n",
      "count  1276.00000  1283.000000           1.283000e+03         1.283000e+03   \n",
      "mean      0.29232     3.177708           1.393668e+06         1.293055e+06   \n",
      "std       0.96770     0.688371           1.406078e+05         1.514811e+05   \n",
      "min       0.00000     1.000000           1.014005e+06         1.014005e+06   \n",
      "25%       0.00000     3.000000           1.383002e+06         1.129202e+06   \n",
      "50%       0.00000     3.000000           1.412202e+06         1.319801e+06   \n",
      "75%       0.00000     4.000000           1.483106e+06         1.410702e+06   \n",
      "max       5.00000     4.000000           1.537604e+06         1.537604e+06   \n",
      "\n",
      "       DEP_DELAY_NEW     AIR_TIME     DISTANCE  \n",
      "count    1277.000000  1276.000000  1283.000000  \n",
      "mean        2.113547    97.941223   706.775526  \n",
      "std         4.580740    54.191632   459.899926  \n",
      "min         0.000000    20.000000    84.000000  \n",
      "25%         0.000000    57.000000   363.000000  \n",
      "50%         0.000000    80.000000   551.000000  \n",
      "75%         1.000000   121.000000   889.000000  \n",
      "max        39.000000   317.000000  2462.000000  \n"
     ]
    }
   ],
   "source": [
    "#Se obtiene los cuartiles para agrupar los retrazos en un 25% y un 75% y verificar como se encuentran agrupados estos datos entre sí\n",
    "Q1 = dataset['ARR_DELAY'].quantile(0.25)\n",
    "Q3 = dataset['ARR_DELAY'].quantile(0.75)\n",
    "IQR = Q3 - Q1\n",
    "print (IQR)\n",
    "df_out = dataset[-((dataset['ARR_DELAY'] < (Q1 - 1.5 * IQR)) | (dataset['ARR_DELAY']> Q3 + 1.5 * IQR))]\n",
    "print(df_out.info())\n",
    "print(df_out.describe())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 1283 entries, 1 to 1598\n",
      "Data columns (total 7 columns):\n",
      " #   Column                 Non-Null Count  Dtype  \n",
      "---  ------                 --------------  -----  \n",
      " 0   ARR_DELAY              1276 non-null   float64\n",
      " 1   DAY_OF_WEEK            1283 non-null   int64  \n",
      " 2   ORIGIN_AIRPORT_SEQ_ID  1283 non-null   int64  \n",
      " 3   DEST_AIRPORT_SEQ_ID    1283 non-null   int64  \n",
      " 4   DEP_DELAY_NEW          1277 non-null   float64\n",
      " 5   AIR_TIME               1276 non-null   float64\n",
      " 6   DISTANCE               1283 non-null   int64  \n",
      "dtypes: float64(3), int64(4)\n",
      "memory usage: 80.2 KB\n",
      "None\n"
     ]
    }
   ],
   "source": [
    "#se obtiene la información general del dataset, los tipos de datos, si hay campos nulos, \n",
    "#la cantidad de registro por variable, la cantidad de memoria usada\n",
    "print(df_out.info())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='ARR_DELAY'>"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#El boxplot es un tipo de gráfico que nos permite identificar valores atípicos y comparar distribuciones. Aqui se evidencia que\n",
    "#se tienen muchos valores atípicos\n",
    "sns.boxplot(x= dataset['ARR_DELAY'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ARR_DELAY\n",
      "0.0      1145\n",
      "1.0        29\n",
      "2.0        27\n",
      "3.0        28\n",
      "4.0        29\n",
      "         ... \n",
      "144.0       1\n",
      "171.0       1\n",
      "176.0       1\n",
      "179.0       1\n",
      "253.0       1\n",
      "Length: 80, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "#Agrupo el campo arrivo retrasado por tamaño para comprobar cuantos datos hay dentro de ella\n",
    "print (dataset.groupby('ARR_DELAY').size())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "3MWuJTKEDM-f"
   },
   "source": [
    "### Limpie la data\n",
    "\n",
    "Consulto cuando valores nulos o desconocidos hay en cada columna"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-09-23T00:13:27.696269Z",
     "iopub.status.busy": "2020-09-23T00:13:27.695586Z",
     "iopub.status.idle": "2020-09-23T00:13:27.699098Z",
     "shell.execute_reply": "2020-09-23T00:13:27.698583Z"
    },
    "id": "JEJHhN65a2VV"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ARR_DELAY                7\n",
       "DAY_OF_WEEK              0\n",
       "ORIGIN_AIRPORT_SEQ_ID    0\n",
       "DEST_AIRPORT_SEQ_ID      0\n",
       "DEP_DELAY_NEW            6\n",
       "AIR_TIME                 7\n",
       "DISTANCE                 0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Elimino los datos nulos para poder trabajar con el dataset\n",
    "dataset = dataset.dropna()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ARR_DELAY                0\n",
       "DAY_OF_WEEK              0\n",
       "ORIGIN_AIRPORT_SEQ_ID    0\n",
       "DEST_AIRPORT_SEQ_ID      0\n",
       "DEP_DELAY_NEW            0\n",
       "AIR_TIME                 0\n",
       "DISTANCE                 0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Compruebo que el procedimiento se haya realizada y haya aplicado cambios\n",
    "dataset.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-09-23T00:13:27.731879Z",
     "iopub.status.busy": "2020-09-23T00:13:27.731117Z",
     "iopub.status.idle": "2020-09-23T00:13:27.734434Z",
     "shell.execute_reply": "2020-09-23T00:13:27.733917Z"
    },
    "id": "ulXz4J7PAUzk"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ARR_DELAY</th>\n",
       "      <th>DAY_OF_WEEK</th>\n",
       "      <th>ORIGIN_AIRPORT_SEQ_ID</th>\n",
       "      <th>DEST_AIRPORT_SEQ_ID</th>\n",
       "      <th>DEP_DELAY_NEW</th>\n",
       "      <th>AIR_TIME</th>\n",
       "      <th>DISTANCE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1594</th>\n",
       "      <td>43.0</td>\n",
       "      <td>4</td>\n",
       "      <td>1410005</td>\n",
       "      <td>1320402</td>\n",
       "      <td>47.0</td>\n",
       "      <td>131.0</td>\n",
       "      <td>861</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1595</th>\n",
       "      <td>0.0</td>\n",
       "      <td>4</td>\n",
       "      <td>1410005</td>\n",
       "      <td>1320402</td>\n",
       "      <td>0.0</td>\n",
       "      <td>127.0</td>\n",
       "      <td>861</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1596</th>\n",
       "      <td>0.0</td>\n",
       "      <td>4</td>\n",
       "      <td>1410005</td>\n",
       "      <td>1323202</td>\n",
       "      <td>0.0</td>\n",
       "      <td>101.0</td>\n",
       "      <td>668</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1597</th>\n",
       "      <td>0.0</td>\n",
       "      <td>4</td>\n",
       "      <td>1410005</td>\n",
       "      <td>1323202</td>\n",
       "      <td>4.0</td>\n",
       "      <td>101.0</td>\n",
       "      <td>668</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1598</th>\n",
       "      <td>0.0</td>\n",
       "      <td>4</td>\n",
       "      <td>1410005</td>\n",
       "      <td>1323202</td>\n",
       "      <td>0.0</td>\n",
       "      <td>102.0</td>\n",
       "      <td>668</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      ARR_DELAY  DAY_OF_WEEK  ORIGIN_AIRPORT_SEQ_ID  DEST_AIRPORT_SEQ_ID  \\\n",
       "1594       43.0            4                1410005              1320402   \n",
       "1595        0.0            4                1410005              1320402   \n",
       "1596        0.0            4                1410005              1323202   \n",
       "1597        0.0            4                1410005              1323202   \n",
       "1598        0.0            4                1410005              1323202   \n",
       "\n",
       "      DEP_DELAY_NEW  AIR_TIME  DISTANCE  \n",
       "1594           47.0     131.0       861  \n",
       "1595            0.0     127.0       861  \n",
       "1596            0.0     101.0       668  \n",
       "1597            4.0     101.0       668  \n",
       "1598            0.0     102.0       668  "
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.tail()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "Cuym4yvk76vU"
   },
   "source": [
    "### Dividamos la data en entrenamiento y prueba\n",
    "\n",
    "Ahora divida el set de datos en un set de entrenamiento y otro de pruebas.\n",
    "\n",
    "Usaremos el set de pruebas en la evaluacion final de nuestro modelo."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-09-23T00:13:27.740592Z",
     "iopub.status.busy": "2020-09-23T00:13:27.739928Z",
     "iopub.status.idle": "2020-09-23T00:13:27.742001Z",
     "shell.execute_reply": "2020-09-23T00:13:27.742428Z"
    },
    "id": "qn-IGhUE7_1H"
   },
   "outputs": [],
   "source": [
    "train_dataset = dataset.sample(frac=0.8,random_state=0)\n",
    "test_dataset = dataset.drop(train_dataset.index)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "J4ubs136WLNp"
   },
   "source": [
    "### Inspeccionar la data\n",
    "\n",
    "Revise rapidamente la distribucion conjunta de un par de columnas de el set de entrenamiento."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-09-23T00:13:27.749652Z",
     "iopub.status.busy": "2020-09-23T00:13:27.748596Z",
     "iopub.status.idle": "2020-09-23T00:13:33.056550Z",
     "shell.execute_reply": "2020-09-23T00:13:33.057143Z"
    },
    "id": "oRKO_x8gWKv-"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.PairGrid at 0x7fcd0ecfeac0>"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 20 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.pairplot(train_dataset[[\"ARR_DELAY\",'DEP_DELAY_NEW', 'AIR_TIME', 'DISTANCE']], diag_kind=\"kde\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "gavKO_6DWRMP"
   },
   "source": [
    "Generar estadisticas generales de los campos del dataset, excepto la variable de estudio"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-09-23T00:13:33.068038Z",
     "iopub.status.busy": "2020-09-23T00:13:33.067343Z",
     "iopub.status.idle": "2020-09-23T00:13:33.100862Z",
     "shell.execute_reply": "2020-09-23T00:13:33.100322Z"
    },
    "id": "yi2FzC3T21jR"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>DAY_OF_WEEK</th>\n",
       "      <td>1274.0</td>\n",
       "      <td>3.171115e+00</td>\n",
       "      <td>0.686932</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ORIGIN_AIRPORT_SEQ_ID</th>\n",
       "      <td>1274.0</td>\n",
       "      <td>1.391968e+06</td>\n",
       "      <td>143095.620838</td>\n",
       "      <td>1014005.0</td>\n",
       "      <td>1383002.0</td>\n",
       "      <td>1425005.5</td>\n",
       "      <td>1483106.0</td>\n",
       "      <td>1537604.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>DEST_AIRPORT_SEQ_ID</th>\n",
       "      <td>1274.0</td>\n",
       "      <td>1.298563e+06</td>\n",
       "      <td>150376.840509</td>\n",
       "      <td>1014005.0</td>\n",
       "      <td>1129202.0</td>\n",
       "      <td>1320402.0</td>\n",
       "      <td>1410702.0</td>\n",
       "      <td>1537604.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>DEP_DELAY_NEW</th>\n",
       "      <td>1274.0</td>\n",
       "      <td>6.994505e+00</td>\n",
       "      <td>17.876045</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>261.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AIR_TIME</th>\n",
       "      <td>1274.0</td>\n",
       "      <td>1.003556e+02</td>\n",
       "      <td>54.893111</td>\n",
       "      <td>20.0</td>\n",
       "      <td>59.0</td>\n",
       "      <td>83.0</td>\n",
       "      <td>123.0</td>\n",
       "      <td>321.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>DISTANCE</th>\n",
       "      <td>1274.0</td>\n",
       "      <td>7.165447e+02</td>\n",
       "      <td>460.526820</td>\n",
       "      <td>84.0</td>\n",
       "      <td>371.0</td>\n",
       "      <td>575.5</td>\n",
       "      <td>920.0</td>\n",
       "      <td>2462.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                        count          mean            std        min  \\\n",
       "DAY_OF_WEEK            1274.0  3.171115e+00       0.686932        1.0   \n",
       "ORIGIN_AIRPORT_SEQ_ID  1274.0  1.391968e+06  143095.620838  1014005.0   \n",
       "DEST_AIRPORT_SEQ_ID    1274.0  1.298563e+06  150376.840509  1014005.0   \n",
       "DEP_DELAY_NEW          1274.0  6.994505e+00      17.876045        0.0   \n",
       "AIR_TIME               1274.0  1.003556e+02      54.893111       20.0   \n",
       "DISTANCE               1274.0  7.165447e+02     460.526820       84.0   \n",
       "\n",
       "                             25%        50%        75%        max  \n",
       "DAY_OF_WEEK                  3.0        3.0        4.0        4.0  \n",
       "ORIGIN_AIRPORT_SEQ_ID  1383002.0  1425005.5  1483106.0  1537604.0  \n",
       "DEST_AIRPORT_SEQ_ID    1129202.0  1320402.0  1410702.0  1537604.0  \n",
       "DEP_DELAY_NEW                0.0        0.0        6.0      261.0  \n",
       "AIR_TIME                    59.0       83.0      123.0      321.0  \n",
       "DISTANCE                   371.0      575.5      920.0     2462.0  "
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_stats = train_dataset.describe()\n",
    "train_stats.pop(\"ARR_DELAY\")\n",
    "train_stats = train_stats.transpose()\n",
    "train_stats"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "Db7Auq1yXUvh"
   },
   "source": [
    "### Separar las caracteristicas de las etiquetas.\n",
    "\n",
    "Separe la columna a estudiar. Esta etiqueta es el valor que entrenara el modelo para predecir."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-09-23T00:13:33.107188Z",
     "iopub.status.busy": "2020-09-23T00:13:33.106198Z",
     "iopub.status.idle": "2020-09-23T00:13:33.108329Z",
     "shell.execute_reply": "2020-09-23T00:13:33.108774Z"
    },
    "id": "t2sluJdCW7jN"
   },
   "outputs": [],
   "source": [
    "train_labels = train_dataset.pop('ARR_DELAY')\n",
    "test_labels = test_dataset.pop('ARR_DELAY')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    318.000000\n",
       "mean       6.084906\n",
       "std       19.981909\n",
       "min        0.000000\n",
       "25%        0.000000\n",
       "50%        0.000000\n",
       "75%        2.000000\n",
       "max      179.000000\n",
       "Name: ARR_DELAY, dtype: float64"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Se hace una consulta de la nueva variable a estudiar\n",
    "test_labels.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "mRklxK5s388r"
   },
   "source": [
    "### Normalice la data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "-ywmerQ6dSox"
   },
   "source": [
    "La normalización de los datos se realiza para evitar cualquier tipo de anomalía, redundancia ó sesgo de la información. \n",
    "\n",
    "Es una buena práctica normalizar funciones que utilizan diferentes escalas y rangos. Aunque el modelo podría  converger sin normalización de características, dificulta el entrenamiento y hace que el modelo resultante dependa de la elección de las unidades utilizadas en la entrada."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-09-23T00:13:33.117479Z",
     "iopub.status.busy": "2020-09-23T00:13:33.116765Z",
     "iopub.status.idle": "2020-09-23T00:13:33.118784Z",
     "shell.execute_reply": "2020-09-23T00:13:33.119274Z"
    },
    "id": "JlC5ooJrgjQF"
   },
   "outputs": [],
   "source": [
    "def norm(x):\n",
    "  return (x - train_stats['mean']) / train_stats['std']\n",
    "normed_train_data = norm(train_dataset)\n",
    "normed_test_data = norm(test_dataset)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['DAY_OF_WEEK', 'ORIGIN_AIRPORT_SEQ_ID', 'DEST_AIRPORT_SEQ_ID',\n",
       "       'DEP_DELAY_NEW', 'AIR_TIME', 'DISTANCE'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_dataset.keys()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "BuiClDk45eS4"
   },
   "source": [
    "Estos datos normalizados es lo que usaremos para entrenar el modelo.\n",
    "\n",
    "Precaución: las estadísticas utilizadas para normalizar las entradas aquí (media y desviación estándar) deben aplicarse a cualquier otro dato que se alimente al modelo, junto con la codificación de un punto que hicimos anteriormente. Eso incluye el conjunto de pruebas, así como los datos en vivo cuando el modelo se usa en producción."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "SmjdzxKzEu1-"
   },
   "source": [
    "## El modelo"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "6SWtkIjhrZwa"
   },
   "source": [
    "### Construye el modelo\n",
    "\n",
    "Construyamos nuestro modelo. Aquí, utilizaremos un modelo `secuencial` con dos capas ocultas densamente conectadas y una capa de salida que devuelve un único valor continuo. Los pasos de construcción del modelo se envuelven en una función, `build_model`, ya que crearemos un segundo modelo, más adelante."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-09-23T00:13:33.125030Z",
     "iopub.status.busy": "2020-09-23T00:13:33.124402Z",
     "iopub.status.idle": "2020-09-23T00:13:33.126998Z",
     "shell.execute_reply": "2020-09-23T00:13:33.126470Z"
    },
    "id": "c26juK7ZG8j-"
   },
   "outputs": [],
   "source": [
    "def build_model():\n",
    "  model = keras.Sequential([\n",
    "    layers.Dense(64, activation='relu', input_shape=[len(train_dataset.keys())]),\n",
    "    layers.Dense(64, activation='relu'),\n",
    "    layers.Dense(1)\n",
    "  ])\n",
    "\n",
    "  optimizer = tf.keras.optimizers.RMSprop(0.001)\n",
    "\n",
    "  model.compile(loss='mse',\n",
    "                optimizer=optimizer,\n",
    "                metrics=['mae', 'mse'])\n",
    "  return model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-09-23T00:13:33.130964Z",
     "iopub.status.busy": "2020-09-23T00:13:33.130309Z",
     "iopub.status.idle": "2020-09-23T00:13:34.872552Z",
     "shell.execute_reply": "2020-09-23T00:13:34.871944Z"
    },
    "id": "cGbPb-PHGbhs"
   },
   "outputs": [],
   "source": [
    "model = build_model()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "Sj49Og4YGULr"
   },
   "source": [
    "### Inspeccione el modelo\n",
    "\n",
    "Use el método `.summary` para imprimir una descripción simple del modelo"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-09-23T00:13:34.877263Z",
     "iopub.status.busy": "2020-09-23T00:13:34.876610Z",
     "iopub.status.idle": "2020-09-23T00:13:34.879990Z",
     "shell.execute_reply": "2020-09-23T00:13:34.880521Z"
    },
    "id": "ReAD0n6MsFK-"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential_2\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_6 (Dense)              (None, 64)                448       \n",
      "_________________________________________________________________\n",
      "dense_7 (Dense)              (None, 64)                4160      \n",
      "_________________________________________________________________\n",
      "dense_8 (Dense)              (None, 1)                 65        \n",
      "=================================================================\n",
      "Total params: 4,673\n",
      "Trainable params: 4,673\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "model.summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "Vt6W50qGsJAL"
   },
   "source": [
    "Ahora se prueba el modelo, para ello tomé 15 ejemplos de los datos de entrenamiento."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-09-23T00:13:34.885465Z",
     "iopub.status.busy": "2020-09-23T00:13:34.884854Z",
     "iopub.status.idle": "2020-09-23T00:13:35.279864Z",
     "shell.execute_reply": "2020-09-23T00:13:35.280423Z"
    },
    "id": "-d-gBaVtGTSC"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[-0.04467235],\n",
       "       [ 0.2598368 ],\n",
       "       [-0.00857797],\n",
       "       [ 0.22627003],\n",
       "       [-0.06465748],\n",
       "       [-0.08137475],\n",
       "       [ 0.02896066],\n",
       "       [-0.22916518],\n",
       "       [ 0.20106854],\n",
       "       [-0.09914072],\n",
       "       [-0.13175008],\n",
       "       [-0.06745291],\n",
       "       [-0.08999554],\n",
       "       [ 0.2109651 ],\n",
       "       [ 0.04529028]], dtype=float32)"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "example_batch = normed_train_data [:15] \n",
    "example_result = model.predict(example_batch)\n",
    "example_result                            "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "QlM8KrSOsaYo"
   },
   "source": [
    "Parece estar funcionando, y produce un resultado de la forma y tipo esperados."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "0-qWCsh6DlyH"
   },
   "source": [
    "### Entrenar a la modelo\n",
    "\n",
    "Entrene el modelo durante 50 épocas y registre la precisión de entrenamiento y validación en el objeto `history`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-09-23T00:13:35.289253Z",
     "iopub.status.busy": "2020-09-23T00:13:35.288254Z",
     "iopub.status.idle": "2020-09-23T00:14:08.890777Z",
     "shell.execute_reply": "2020-09-23T00:14:08.891232Z"
    },
    "id": "sD7qHCmNIOY0"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "..................................................\n",
      ".................................................."
     ]
    }
   ],
   "source": [
    "# Display training progress by printing a single dot for each completed epoch\n",
    "class PrintDot(keras.callbacks.Callback):\n",
    "  def on_epoch_end(self, epoch, logs):\n",
    "    if epoch % 50 == 0: print('')\n",
    "    print('.', end='')\n",
    "\n",
    "EPOCHS = 100\n",
    "\n",
    "history = model.fit(\n",
    "  normed_train_data, train_labels,\n",
    "  epochs=EPOCHS, validation_split = 0.2, verbose=0,\n",
    "  callbacks=[PrintDot()])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "tQm3pc0FYPQB"
   },
   "source": [
    "Visualice el progreso de entrenamiento del modelo usando las estadísticas almacenadas en el objeto `history`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-09-23T00:14:08.904442Z",
     "iopub.status.busy": "2020-09-23T00:14:08.896689Z",
     "iopub.status.idle": "2020-09-23T00:14:08.907100Z",
     "shell.execute_reply": "2020-09-23T00:14:08.907542Z"
    },
    "id": "4Xj91b-dymEy"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>loss</th>\n",
       "      <th>mae</th>\n",
       "      <th>mse</th>\n",
       "      <th>val_loss</th>\n",
       "      <th>val_mae</th>\n",
       "      <th>val_mse</th>\n",
       "      <th>epoch</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>21.417341</td>\n",
       "      <td>2.538038</td>\n",
       "      <td>21.417341</td>\n",
       "      <td>24.579264</td>\n",
       "      <td>2.748524</td>\n",
       "      <td>24.579264</td>\n",
       "      <td>95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>21.580816</td>\n",
       "      <td>2.543373</td>\n",
       "      <td>21.580816</td>\n",
       "      <td>25.412613</td>\n",
       "      <td>2.825557</td>\n",
       "      <td>25.412613</td>\n",
       "      <td>96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>21.310993</td>\n",
       "      <td>2.517915</td>\n",
       "      <td>21.310993</td>\n",
       "      <td>25.340601</td>\n",
       "      <td>2.789922</td>\n",
       "      <td>25.340599</td>\n",
       "      <td>97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>21.480211</td>\n",
       "      <td>2.513540</td>\n",
       "      <td>21.480211</td>\n",
       "      <td>24.607212</td>\n",
       "      <td>2.722498</td>\n",
       "      <td>24.607212</td>\n",
       "      <td>98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>21.630196</td>\n",
       "      <td>2.512928</td>\n",
       "      <td>21.630196</td>\n",
       "      <td>24.739328</td>\n",
       "      <td>2.757784</td>\n",
       "      <td>24.739328</td>\n",
       "      <td>99</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         loss       mae        mse   val_loss   val_mae    val_mse  epoch\n",
       "95  21.417341  2.538038  21.417341  24.579264  2.748524  24.579264     95\n",
       "96  21.580816  2.543373  21.580816  25.412613  2.825557  25.412613     96\n",
       "97  21.310993  2.517915  21.310993  25.340601  2.789922  25.340599     97\n",
       "98  21.480211  2.513540  21.480211  24.607212  2.722498  24.607212     98\n",
       "99  21.630196  2.512928  21.630196  24.739328  2.757784  24.739328     99"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hist = pd.DataFrame(history.history)\n",
    "hist['epoch'] = history.epoch\n",
    "hist.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-09-23T00:14:08.916363Z",
     "iopub.status.busy": "2020-09-23T00:14:08.915232Z",
     "iopub.status.idle": "2020-09-23T00:14:09.466039Z",
     "shell.execute_reply": "2020-09-23T00:14:09.466618Z"
    },
    "id": "B6XriGbVPh2t"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Se grafica el comportamiento del error medio abasoluto de la varibale arrivo tarde en datos de entrenamiento y validación\n",
    "\n",
    "def plot_history(history):\n",
    "  hist = pd.DataFrame(history.history)\n",
    "  hist['epoch'] = history.epoch\n",
    "\n",
    "  plt.figure()\n",
    "  plt.xlabel('Epoch')\n",
    "  plt.ylabel('Mean Abs Error [ARR_DELAY]')\n",
    "  plt.plot(hist['epoch'], hist['mae'],\n",
    "           label='Train Error')\n",
    "  plt.plot(hist['epoch'], hist['val_mae'],\n",
    "           label = 'Val Error')\n",
    "  #plt.ylim([0,5])\n",
    "  plt.legend()\n",
    "\n",
    "  plt.figure()\n",
    "  plt.xlabel('Epoch')\n",
    "  plt.ylabel('Mean Square Error [$ARR_DELAY^2$]')\n",
    "  plt.plot(hist['epoch'], hist['mse'],\n",
    "           label='Train Error')\n",
    "  plt.plot(hist['epoch'], hist['val_mse'],\n",
    "           label = 'Val Error')\n",
    "  #plt.ylim([0,20])\n",
    "  plt.legend()\n",
    "  plt.show()\n",
    "\n",
    "\n",
    "plot_history(history)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "AqsuANc11FYv"
   },
   "source": [
    "Se realiza una validación de la gráfica, haciendose un early stop, para cuando ya no exista relación entre las variables, se detenga la ejecución"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-09-23T00:14:09.475435Z",
     "iopub.status.busy": "2020-09-23T00:14:09.474702Z",
     "iopub.status.idle": "2020-09-23T00:14:13.240258Z",
     "shell.execute_reply": "2020-09-23T00:14:13.239617Z"
    },
    "id": "fdMZuhUgzMZ4"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "..................................................\n",
      "................................................"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "model = build_model()\n",
    "\n",
    "# The patience parameter is the amount of epochs to check for improvement\n",
    "early_stop = keras.callbacks.EarlyStopping(monitor='val_loss', patience=10)\n",
    "\n",
    "history = model.fit(normed_train_data, train_labels, epochs=EPOCHS,\n",
    "                    validation_split = 0.2, verbose=0, callbacks=[early_stop, PrintDot()])\n",
    "\n",
    "plot_history(history)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "3St8-DmrX8P4"
   },
   "source": [
    "Se sacan los valores d elas pédidas, media, mediana, el error medio absoluto"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-09-23T00:14:13.245748Z",
     "iopub.status.busy": "2020-09-23T00:14:13.244728Z",
     "iopub.status.idle": "2020-09-23T00:14:13.297849Z",
     "shell.execute_reply": "2020-09-23T00:14:13.298268Z"
    },
    "id": "jl_yNr5n1kms"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10/10 - 0s - loss: 23.3678 - mae: 2.6838 - mse: 23.3678\n",
      "Testing set Mean Abs Error:  2.68 ARR_DELAY\n"
     ]
    }
   ],
   "source": [
    "loss, mae, mse = model.evaluate(normed_test_data, test_labels, verbose=2)\n",
    "\n",
    "print(\"Testing set Mean Abs Error: {:5.2f} ARR_DELAY\".format(mae))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "ft603OzXuEZC"
   },
   "source": [
    "### Haga Predicciones\n",
    "\n",
    "Finalmente, prediga los valores de arrivo tarde utilizando datos en el conjunto de pruebas:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-09-23T00:14:13.304696Z",
     "iopub.status.busy": "2020-09-23T00:14:13.303733Z",
     "iopub.status.idle": "2020-09-23T00:14:13.491809Z",
     "shell.execute_reply": "2020-09-23T00:14:13.491188Z"
    },
    "id": "Xe7RXH3N3CWU"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "test_predictions = model.predict(normed_test_data).flatten()\n",
    "\n",
    "plt.scatter(test_labels, test_predictions)\n",
    "plt.xlabel('True Values [ARR_DELAY]')\n",
    "plt.ylabel('Predictions [ARR_DELAY]')\n",
    "plt.axis('equal')\n",
    "plt.axis('square')\n",
    "plt.xlim([0,plt.xlim()[1]])\n",
    "plt.ylim([0,plt.ylim()[1]])\n",
    "_ = plt.plot([-180, 180], [-180, 180])\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "19wyogbOSU5t"
   },
   "source": [
    "El modelo predice razonablemente bien."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-09-23T00:14:13.505689Z",
     "iopub.status.busy": "2020-09-23T00:14:13.504621Z",
     "iopub.status.idle": "2020-09-23T00:14:13.660425Z",
     "shell.execute_reply": "2020-09-23T00:14:13.659893Z"
    },
    "id": "f-OHX4DiXd8x"
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "error = test_predictions - test_labels\n",
    "plt.hist(error, bins = 25)\n",
    "plt.xlabel(\"Prediction Error [ARR_DELAY]\")\n",
    "_ = plt.ylabel(\"Count\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "0-qWCsh6DlyH"
   },
   "source": [
    "### ÁRBOL DE CLASIFICACIÓN RANDOM FOREST REGRESSOR\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Modelo: {'criterion': 'mae', 'max_depth': None, 'max_features': 'auto', 'n_estimators': 50} ✓\n",
      "Modelo: {'criterion': 'mae', 'max_depth': None, 'max_features': 'log2', 'n_estimators': 50} ✓\n",
      "Modelo: {'criterion': 'mae', 'max_depth': 3, 'max_features': 'auto', 'n_estimators': 50} ✓\n",
      "Modelo: {'criterion': 'mae', 'max_depth': 3, 'max_features': 'log2', 'n_estimators': 50} ✓\n",
      "Modelo: {'criterion': 'mae', 'max_depth': 10, 'max_features': 'auto', 'n_estimators': 50} ✓\n",
      "Modelo: {'criterion': 'mae', 'max_depth': 10, 'max_features': 'log2', 'n_estimators': 50} ✓\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>oob_accuracy</th>\n",
       "      <th>modelo</th>\n",
       "      <th>criterion</th>\n",
       "      <th>max_depth</th>\n",
       "      <th>max_features</th>\n",
       "      <th>n_estimators</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>True</td>\n",
       "      <td>(DecisionTreeRegressor(criterion='mae', max_fe...</td>\n",
       "      <td>mae</td>\n",
       "      <td>NaN</td>\n",
       "      <td>auto</td>\n",
       "      <td>50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>True</td>\n",
       "      <td>(DecisionTreeRegressor(criterion='mae', max_fe...</td>\n",
       "      <td>mae</td>\n",
       "      <td>NaN</td>\n",
       "      <td>log2</td>\n",
       "      <td>50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>True</td>\n",
       "      <td>(DecisionTreeRegressor(criterion='mae', max_de...</td>\n",
       "      <td>mae</td>\n",
       "      <td>3.0</td>\n",
       "      <td>auto</td>\n",
       "      <td>50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>True</td>\n",
       "      <td>(DecisionTreeRegressor(criterion='mae', max_de...</td>\n",
       "      <td>mae</td>\n",
       "      <td>3.0</td>\n",
       "      <td>log2</td>\n",
       "      <td>50</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   oob_accuracy                                             modelo criterion  \\\n",
       "0          True  (DecisionTreeRegressor(criterion='mae', max_fe...       mae   \n",
       "1          True  (DecisionTreeRegressor(criterion='mae', max_fe...       mae   \n",
       "2          True  (DecisionTreeRegressor(criterion='mae', max_de...       mae   \n",
       "3          True  (DecisionTreeRegressor(criterion='mae', max_de...       mae   \n",
       "\n",
       "   max_depth max_features  n_estimators  \n",
       "0        NaN         auto            50  \n",
       "1        NaN         log2            50  \n",
       "2        3.0         auto            50  \n",
       "3        3.0         log2            50  "
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Grid de hiperparámetros evaluados\n",
    "\n",
    "param_grid = ParameterGrid(\n",
    "                {'n_estimators': [50],\n",
    "                 'max_features': ['auto','log2'],\n",
    "                 'max_depth'   : [None, 3, 10],\n",
    "                 'criterion'   : ['mae']\n",
    "                }\n",
    "            )\n",
    "\n",
    "# Loop para ajustar un modelo con cada combinación de hiperparámetros\n",
    "\n",
    "resultados = {'params': [], 'oob_accuracy':[], 'modelo': []}\n",
    "\n",
    "for params in param_grid:\n",
    "    \n",
    "    model = RandomForestRegressor(\n",
    "                oob_score    = True,\n",
    "                n_jobs       = -1,\n",
    "                random_state = 123,\n",
    "                ** params\n",
    "             )\n",
    "    \n",
    "    model.fit(normed_train_data, train_labels)\n",
    "    \n",
    "    resultados['params'].append(params)\n",
    "    resultados['oob_accuracy'].append(model.oob_score)\n",
    "    resultados['modelo'].append(model)\n",
    "    print (F\"Modelo: {params} \\u2713\")\n",
    "\n",
    "#Resultados\n",
    "\n",
    "resultados = pd.DataFrame(resultados)\n",
    "resultados = pd.concat([resultados, resultados['params'].apply(pd.Series)], axis=1)\n",
    "resultados = resultados.sort_values('oob_accuracy', ascending=False)\n",
    "resultados = resultados.drop(columns = 'params')\n",
    "resultados.head(4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "El error (mae) de prueba es: 2.948396226415094\n"
     ]
    }
   ],
   "source": [
    "# Entrenamiento del modelo final\n",
    "modelorandom_final = resultados.iloc[0,1]\n",
    "\n",
    "predicciones= modelorandom_final.predict(X = normed_test_data)\n",
    "\n",
    "rmae = mean_absolute_error(\n",
    "            y_true = test_labels,\n",
    "            y_pred = predicciones\n",
    ")\n",
    "print(f\"El error (mae) de prueba es: {rmae}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#https://www.tensorflow.org/tutorials/keras/regression?hl=es-419"
   ]
  }
 ],
 "metadata": {
  "colab": {
   "collapsed_sections": [],
   "name": "regression.ipynb",
   "toc_visible": true
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
